{"version":3,"sources":["extensions/dynamicfavicon/DynamicfaviconApplicationCustomizer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,oDAAiD;AACjD,8DAAiD;AACjD,sEAEwC;AAGxC,oEAAsE;AAEtE,IAAM,UAAU,GAAW,qCAAqC,CAAC;AAYjE,qFAAqF;AACrF;IACU,uDAAyE;IADnF;;IAmBA,CAAC;IAfQ,oDAAM,GAAb;QAEE,IAAI,GAAG,GAAW,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;QAC9C,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACT,qBAAG,CAAC,IAAI,CAAC,UAAU,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC;QAAA,IAAI,CAAA,CAAC;YACF,IAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,mBAAmB,CAAgB,IAAI,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAgB,CAAC;YACvH,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;YAC1C,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;YAC1C,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YAC/B,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAC/D,CAAC;QAED,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAdD;QADC,qBAAQ;qEAeR;IACH,0CAAC;CAnBD,AAmBC,CAlBS,+CAAyB,GAkBlC;kBAnBoB,mCAAmC","file":"extensions/dynamicfavicon/DynamicfaviconApplicationCustomizer.js","sourcesContent":["import { override } from '@microsoft/decorators';\r\nimport { Log } from '@microsoft/sp-core-library';\r\nimport {\r\n  BaseApplicationCustomizer\r\n} from '@microsoft/sp-application-base';\r\nimport { Dialog } from '@microsoft/sp-dialog';\r\n\r\nimport * as strings from 'DynamicfaviconApplicationCustomizerStrings';\r\n\r\nconst LOG_SOURCE: string = 'DynamicfaviconApplicationCustomizer';\r\n\r\n/**\r\n * If your command set uses the ClientSideComponentProperties JSON input,\r\n * it will be deserialized into the BaseExtension.properties object.\r\n * You can define an interface to describe it.\r\n */\r\nexport interface IDynamicfaviconApplicationCustomizerProperties {\r\n  // This is an example; replace with your own property\r\n  faviconpath: string;\r\n}\r\n\r\n/** A Custom Action which can be run during execution of a Client Side Application */\r\nexport default class DynamicfaviconApplicationCustomizer\r\n  extends BaseApplicationCustomizer<IDynamicfaviconApplicationCustomizerProperties> {\r\n\r\n  @override\r\n  public onInit(): Promise<void> {  \r\n\r\n    let url: string = this.properties.faviconpath;\r\n    if (!url) {\r\n      Log.info(LOG_SOURCE, strings.Info);\r\n    }else{\r\n        var link = document.querySelector(\"link[rel*='icon']\") as HTMLElement || document.createElement('link') as HTMLElement;\r\n        link.setAttribute('type', 'image/x-icon');\r\n        link.setAttribute('rel', 'shortcut icon');\r\n        link.setAttribute('href', url);\r\n        document.getElementsByTagName('head')[0].appendChild(link);\r\n    }\r\n\r\n    return Promise.resolve();\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}